export interface FindProtestModel {
  id: string;
  paymentId: string;
  status: string;
  createdAt: string;
  updatedAt: string;
  deletedAt: string | null;
  drawerName: string;
  drawerDoc: string;
  drawerAddress: string;
  drawerZip: string;
  drawerCity: string;
  drawerState: string;
  ourNumber: string;
  species: string;
  titleNumber: string;
  issueDate: string;
  balance: number;
  endorsementType: string;
  holderDeclaration: string;
  acceptance: string;
  invoiceStatus: string;
  contractAccount: string;
  barcode: string;
  installationStatus: string;
  approved: string;
  criticism: string;
  protocol: string;
  protocolDate: string;
  notaryCode: string;
  district: string;
  districtDesc: string;
  occurrence: string;
  occurrenceDate: string;
  irregularCode: string;
  irregularCompl: string;
  notaryFees: number;
  payment: Payment;
  ProtestHistory: ProtestHistory[];
}

interface Payment {
  id: string;
  externalId: string;
  companyId: string;
  clientId: string;
  taxPayerId: string;
  title: string;
  description: string;
  statusPaymentApply: string | null;
  status: string;
  amount: number;
  dueDate: string;
  amountPaid: number | null;
  amountDetails: any | null;
  paidDate: string | null;
  isAutomaticDebit: boolean;
  isPixCashIn: boolean;
  isPendingCreatePixCashIn: boolean;
  howWasitPaid: string | null;
  amountInterest: number;
  hasInterest: boolean;
  modalityInterest: string;
  amountFine: number;
  hasFine: boolean;
  modalityFine: string;
  amountRate: number | null;
  hasRate: boolean;
  modalityRate: string | null;
  amountDiscount: number | null;
  hasDiscount: boolean;
  modalityDiscount: string | null;
  transactionId: string | null;
  endToEndId: string | null;
  transactionInfoId: string | null;
  batchId: string | null;
  bucketPathUrl: string | null;
  createdUserId: string | null;
  driverRouter: string | null;
  paymentsMethodId: string | null;
  isBillet: boolean;
  paymentsShapeId: string | null;
  driverId: string | null;
  invoice: string;
  cnabId: string;
  expirationInDays: number;
  idPaymentMaster: string | null;
  isPaymentMaster: boolean | null;
  observationCanceled: string | null;
  observation: string | null;
  installments: number;
  installmentReference: number;
  isCompanyWebhookSuccessApply: boolean;
  issueDate: string | null;
  createdAt: string;
  updatedAt: string;
  deletedAt: string | null;
  returnedAt: string | null;
  protestId: string;
}

interface ProtestHistory {
  id: string;
  protestId: string;
  previousData: string;
  updatedData: string;
  changedByUserId: string | null;
  createdAt: string;
  updatedAt: string;
}
